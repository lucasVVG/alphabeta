<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.4.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Z3" version="4.8.12" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Eprover" version="2.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="Vampire" version="4.8" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="minmax.mlw"/>
<theory name="Top">
 <goal name="int63_min&#39;vc" expl="VC for int63_min">
 <proof prover="0"><result status="valid" time="0.000001" steps="14"/></proof>
 </goal>
 <goal name="int63_max&#39;vc" expl="VC for int63_max">
 <proof prover="0"><result status="valid" time="0.013805" steps="14"/></proof>
 </goal>
 <goal name="height&#39;vc" expl="VC for height">
 <proof prover="0"><result status="valid" time="0.011485" steps="43"/></proof>
 </goal>
 <goal name="height_list&#39;vc" expl="VC for height_list">
 <proof prover="0"><result status="valid" time="0.011453" steps="106"/></proof>
 </goal>
 <goal name="height_list_max&#39;vc" expl="VC for height_list_max">
 <proof prover="0"><result status="valid" time="0.011442" steps="161"/></proof>
 </goal>
 <goal name="minmax&#39;&#39;vc" expl="VC for minmax&#39;">
 <transf name="split_vc" >
  <goal name="minmax&#39;&#39;vc.0" expl="variant decrease">
  <proof prover="0"><result status="valid" time="0.010621" steps="17"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="minmax&#39;_list&#39;vc" expl="VC for minmax&#39;_list">
 <proof prover="0"><result status="valid" time="0.013801" steps="90"/></proof>
 </goal>
 <goal name="minmax&#39;_list_max_in&#39;vc" expl="VC for minmax&#39;_list_max_in">
 <proof prover="0"><result status="valid" time="0.107580" steps="1173"/></proof>
 <proof prover="1"><result status="valid" time="0.384216" steps="1404395"/></proof>
 </goal>
 <goal name="minmax&#39;_list_min_in&#39;vc" expl="VC for minmax&#39;_list_min_in">
 <proof prover="0"><result status="valid" time="0.117410" steps="1082"/></proof>
 <proof prover="1"><result status="valid" time="0.534892" steps="1339733"/></proof>
 </goal>
 <goal name="mimax&#39;_list_max&#39;vc" expl="VC for mimax&#39;_list_max">
 <transf name="split_vc" >
  <goal name="mimax&#39;_list_max&#39;vc.0" expl="variant decrease">
  <proof prover="0"><result status="valid" time="0.017268" steps="62"/></proof>
  </goal>
  <goal name="mimax&#39;_list_max&#39;vc.1" expl="variant decrease">
  <proof prover="0"><result status="valid" time="0.018816" steps="62"/></proof>
  </goal>
  <goal name="mimax&#39;_list_max&#39;vc.2" expl="postcondition">
  <transf name="split_vc" >
   <goal name="mimax&#39;_list_max&#39;vc.2.0" expl="postcondition">
   <proof prover="0"><result status="valid" time="0.017805" steps="23"/></proof>
   </goal>
   <goal name="mimax&#39;_list_max&#39;vc.2.1" expl="postcondition">
   <proof prover="0"><result status="valid" time="0.273540" steps="2388"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="mimax&#39;_list_min&#39;vc" expl="VC for mimax&#39;_list_min">
 <proof prover="0"><result status="valid" time="0.272043" steps="4480"/></proof>
 </goal>
 <goal name="minmax&#39;_list_upper_extend_true">
 <proof prover="0"><result status="valid" time="0.056100" steps="624"/></proof>
 </goal>
 <goal name="minmax&#39;_list_upper_extend_false">
 <proof prover="0"><result status="valid" time="0.076448" steps="636"/></proof>
 </goal>
 <goal name="minmax&#39;_list_lower_extend_true">
 <proof prover="0"><result status="valid" time="0.098968" steps="681"/></proof>
 </goal>
 <goal name="minmax&#39;_list_lower_extend_false">
 <proof prover="0"><result status="valid" time="0.080494" steps="702"/></proof>
 </goal>
 <goal name="minmax&#39;_list_extendscore_true&#39;vc" expl="VC for minmax&#39;_list_extendscore_true">
 <proof prover="0"><result status="valid" time="0.072333" steps="1005"/></proof>
 <transf name="split_vc" >
  <goal name="minmax&#39;_list_extendscore_true&#39;vc.0" expl="variant decrease">
  <proof prover="0"><result status="valid" time="0.014266" steps="133"/></proof>
  </goal>
  <goal name="minmax&#39;_list_extendscore_true&#39;vc.1" expl="precondition">
  <proof prover="0"><result status="valid" time="0.007276" steps="49"/></proof>
  <transf name="split_vc" >
   <goal name="minmax&#39;_list_extendscore_true&#39;vc.1.0" expl="precondition">
   <proof prover="0"><result status="valid" time="0.013942" steps="49"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="minmax&#39;_list_extendscore_true&#39;vc.2" expl="postcondition">
  <transf name="split_vc" >
   <goal name="minmax&#39;_list_extendscore_true&#39;vc.2.0" expl="postcondition">
   <proof prover="0"><result status="valid" time="0.028152" steps="20"/></proof>
   </goal>
   <goal name="minmax&#39;_list_extendscore_true&#39;vc.2.1" expl="postcondition">
   <proof prover="0"><result status="valid" time="0.013424" steps="238"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="minmax&#39;_list_extendscore_false&#39;vc" expl="VC for minmax&#39;_list_extendscore_false">
 <proof prover="0"><result status="valid" time="0.023195" steps="1031"/></proof>
 </goal>
 <goal name="minmax&#39;_list_infscore_true&#39;vc" expl="VC for minmax&#39;_list_infscore_true">
 <proof prover="0"><result status="valid" time="0.349499" steps="6552"/></proof>
 </goal>
 <goal name="minmax&#39;_list_supscore_false&#39;vc" expl="VC for minmax&#39;_list_supscore_false">
 <proof prover="0"><result status="valid" time="0.628968" steps="11920"/></proof>
 </goal>
 <goal name="minmax&#39;_spec&#39;vc" expl="VC for minmax&#39;_spec">
 <proof prover="0"><result status="valid" time="0.019863" steps="469"/></proof>
 </goal>
 <goal name="minmax&#39;_list_spec&#39;vc" expl="VC for minmax&#39;_list_spec">
 <transf name="split_vc" >
  <goal name="minmax&#39;_list_spec&#39;vc.0" expl="variant decrease">
  <proof prover="0"><result status="valid" time="0.019682" steps="45"/></proof>
  </goal>
  <goal name="minmax&#39;_list_spec&#39;vc.1" expl="variant decrease">
  <proof prover="0"><result status="valid" time="0.021788" steps="166"/></proof>
  </goal>
  <goal name="minmax&#39;_list_spec&#39;vc.2" expl="variant decrease">
  <proof prover="0"><result status="valid" time="0.021423" steps="167"/></proof>
  </goal>
  <goal name="minmax&#39;_list_spec&#39;vc.3" expl="postcondition">
  <transf name="split_vc" >
   <goal name="minmax&#39;_list_spec&#39;vc.3.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.000000" steps="8670"/></proof>
   <proof prover="1" obsolete="true"><result status="timeout" time="1.000000"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.000000" steps="106249"/></proof>
   <transf name="split_vc" >
    <goal name="minmax&#39;_list_spec&#39;vc.3.0.0" expl="postcondition">
    <transf name="split_vc" >
     <goal name="minmax&#39;_list_spec&#39;vc.3.0.0.0" expl="postcondition">
     <proof prover="0"><result status="valid" time="0.013334" steps="37"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="minmax&#39;_list_spec&#39;vc.3.0.1" expl="postcondition">
    <transf name="split_vc" >
     <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.0" expl="postcondition">
     <proof prover="0"><result status="timeout" time="1.000000" steps="17021"/></proof>
     <proof prover="1"><result status="timeout" time="1.000000"/></proof>
     <proof prover="2"><result status="timeout" time="1.000000" steps="204265"/></proof>
     <transf name="destruct" arg1="Ensures1">
      <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.0.0" expl="postcondition">
      <proof prover="0"><result status="timeout" time="1.000000" steps="16423"/></proof>
      <proof prover="1"><result status="timeout" time="1.000000"/></proof>
      <proof prover="2"><result status="timeout" time="1.000000" steps="258198"/></proof>
      </goal>
      <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.0.1" expl="postcondition">
      <proof prover="0"><result status="timeout" time="1.000000" steps="12910"/></proof>
      <proof prover="1"><result status="timeout" time="1.000000"/></proof>
      <proof prover="2"><result status="timeout" time="1.000000" steps="166108"/></proof>
      </goal>
     </transf>
     <transf name="rewrite" arg1="H9">
      <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.0.0" expl="postcondition">
      <transf name="rewrite" arg1="H5">
       <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.0.0.0" expl="postcondition">
       <transf name="simplify_computations" >
        <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.0.0.0.0" expl="postcondition">
        </goal>
       </transf>
       <transf name="unfold" arg1="minmax&#39;_list_upper_bound">
        <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.0.0.0.0" expl="VC for minmax&#39;_list_spec">
        <transf name="split_vc" >
         <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.0.0.0.0.0" expl="VC for minmax&#39;_list_spec">
         <proof prover="0"><result status="valid" time="0.076037" steps="1330"/></proof>
         </goal>
         <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.0.0.0.0.1" expl="VC for minmax&#39;_list_spec">
         <proof prover="0"><result status="timeout" time="1.000000" steps="14042"/></proof>
         <proof prover="1"><result status="timeout" time="1.000000"/></proof>
         <proof prover="2"><result status="timeout" time="1.000000" steps="143215"/></proof>
         <transf name="simplify_computations" >
          <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.0.0.0.0.1.0" expl="VC for minmax&#39;_list_spec">
          <transf name="case" arg1="(x1 = x3)">
           <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.0.0.0.0.1.0.0" expl="true case">
           <proof prover="0" timelimit="5"><result status="timeout" time="5.000000" steps="66595"/></proof>
           <proof prover="1" timelimit="5"><result status="timeout" time="5.000000"/></proof>
           <proof prover="2" timelimit="5"><result status="timeout" time="5.000000" steps="1132484"/></proof>
           <proof prover="3"><result status="unknown" time="0.001100"/></proof>
           <proof prover="4"><result status="timeout" time="5.000000"/></proof>
           <transf name="unfold" arg1="score">
            <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.0.0.0.0.1.0.0.0" expl="true case">
            <transf name="revert" arg1="H12">
             <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.0.0.0.0.1.0.0.0.0" expl="true case">
             <transf name="rewrite" arg1="H13">
              <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.0.0.0.0.1.0.0.0.0.0" expl="true case">
              <transf name="rewrite" arg1="H10">
               <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.0.0.0.0.1.0.0.0.0.0.0" expl="true case">
               <transf name="rewrite" arg1="&lt;-" arg2="h">
                <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.0.0.0.0.1.0.0.0.0.0.0.0" expl="true case">
                <transf name="rewrite" arg1="H">
                 <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.0.0.0.0.1.0.0.0.0.0.0.0.0" expl="true case">
                 <transf name="simplify_computations" >
                  <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.0.0.0.0.1.0.0.0.0.0.0.0.0.0" expl="true case">
                  <transf name="unfold" arg1="minmax&#39;_upper_bound">
                   <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0" expl="true case">
                   <transf name="simplify_computations" >
                    <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0" expl="true case">
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            <transf name="rewrite" arg1="H14">
             <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.0.0.0.0.1.0.0.0.0" expl="true case">
             <transf name="rewrite" arg1="H10">
              <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.0.0.0.0.1.0.0.0.0.0" expl="true case">
              <transf name="rewrite" arg1="&lt;-" arg2="h">
               <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.0.0.0.0.1.0.0.0.0.0.0" expl="true case">
               <transf name="rewrite" arg1="H">
                <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.0.0.0.0.1.0.0.0.0.0.0.0" expl="true case">
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.0.0.0.0.1.0.1" expl="false case">
           <proof prover="0"><result status="valid" time="0.273754" steps="4133"/></proof>
           </goal>
          </transf>
          <transf name="unfold" arg1="score">
           <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.0.0.0.0.1.0.0" expl="VC for minmax&#39;_list_spec">
           <transf name="rewrite" arg1="H14">
            <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.0.0.0.0.1.0.0.0" expl="VC for minmax&#39;_list_spec">
            <transf name="rewrite" arg1="H10">
             <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.0.0.0.0.1.0.0.0.0" expl="VC for minmax&#39;_list_spec">
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.1" expl="postcondition">
     <proof prover="0"><result status="timeout" time="1.000000" steps="15425"/></proof>
     <proof prover="1"><result status="timeout" time="1.000000"/></proof>
     <proof prover="2"><result status="timeout" time="1.000000" steps="277462"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="minmax&#39;_list_spec&#39;vc.3.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.000000" steps="24020"/></proof>
   <proof prover="1" obsolete="true"><result status="timeout" time="1.000000"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.000000" steps="621875"/></proof>
   <transf name="split_vc" >
    <goal name="minmax&#39;_list_spec&#39;vc.3.1.0" expl="postcondition">
    <proof prover="0"><result status="timeout" time="1.000000" steps="22238"/></proof>
    <proof prover="1"><result status="highfailure" time="0.037352"/></proof>
    <proof prover="2"><result status="timeout" time="1.000000" steps="638869"/></proof>
    </goal>
    <goal name="minmax&#39;_list_spec&#39;vc.3.1.1" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.000000" steps="12325"/></proof>
    <proof prover="1" obsolete="true"><result status="timeout" time="1.000000"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.000000" steps="205544"/></proof>
    <transf name="split_vc" >
     <goal name="minmax&#39;_list_spec&#39;vc.3.1.1.0" expl="postcondition">
     <proof prover="0"><result status="timeout" time="1.000000" steps="15275"/></proof>
     <proof prover="1"><result status="timeout" time="1.000000"/></proof>
     <proof prover="2"><result status="timeout" time="1.000000" steps="175179"/></proof>
     </goal>
     <goal name="minmax&#39;_list_spec&#39;vc.3.1.1.1" expl="postcondition">
     <proof prover="0"><result status="timeout" time="1.000000" steps="14578"/></proof>
     <proof prover="1"><result status="timeout" time="1.000000"/></proof>
     <proof prover="2"><result status="timeout" time="1.000000" steps="208256"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="minmax&#39;vc" expl="VC for minmax">
 <transf name="split_vc" >
  <goal name="minmax&#39;vc.0" expl="variant decrease">
  <proof prover="0"><result status="valid" time="0.010378" steps="78"/></proof>
  </goal>
  <goal name="minmax&#39;vc.1" expl="variant decrease">
  <proof prover="0"><result status="valid" time="0.021880" steps="110"/></proof>
  </goal>
  <goal name="minmax&#39;vc.2" expl="precondition">
  <proof prover="0"><result status="valid" time="0.014752" steps="109"/></proof>
  </goal>
  <goal name="minmax&#39;vc.3" expl="postcondition">
  <proof prover="2"><result status="valid" time="0.128739" steps="36661"/></proof>
  </goal>
  <goal name="minmax&#39;vc.4" expl="precondition">
  <proof prover="0"><result status="valid" time="0.018074" steps="30"/></proof>
  </goal>
  <goal name="minmax&#39;vc.5" expl="variant decrease">
  <proof prover="0"><result status="valid" time="0.018174" steps="78"/></proof>
  </goal>
  <goal name="minmax&#39;vc.6" expl="variant decrease">
  <proof prover="0"><result status="valid" time="0.019130" steps="110"/></proof>
  </goal>
  <goal name="minmax&#39;vc.7" expl="precondition">
  <proof prover="0"><result status="valid" time="0.029793" steps="109"/></proof>
  </goal>
  <goal name="minmax&#39;vc.8" expl="postcondition">
  <proof prover="2"><result status="valid" time="0.128901" steps="36628"/></proof>
  </goal>
  <goal name="minmax&#39;vc.9" expl="precondition">
  <proof prover="0"><result status="valid" time="0.010221" steps="30"/></proof>
  </goal>
  <goal name="minmax&#39;vc.10" expl="postcondition">
  <transf name="split_vc" >
   <goal name="minmax&#39;vc.10.0" expl="postcondition">
   <proof prover="0"><result status="valid" time="0.008421" steps="15"/></proof>
   </goal>
   <goal name="minmax&#39;vc.10.1" expl="postcondition">
   <proof prover="0"><result status="valid" time="0.017716" steps="23"/></proof>
   </goal>
   <goal name="minmax&#39;vc.10.2" expl="postcondition">
   <proof prover="0"><result status="valid" time="0.016209" steps="23"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="alphabeta&#39;vc" expl="VC for alphabeta">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.225194" steps="18414"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.000000"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.000000" steps="188594"/></proof>
 <transf name="split_vc" >
  <goal name="alphabeta&#39;vc.0" expl="variant decrease">
  <proof prover="0"><result status="valid" time="0.011360" steps="78"/></proof>
  </goal>
  <goal name="alphabeta&#39;vc.1" expl="variant decrease">
  <proof prover="0" obsolete="true"><result status="valid" time="0.030102" steps="156"/></proof>
  </goal>
  <goal name="alphabeta&#39;vc.2" expl="precondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.020846" steps="154"/></proof>
  </goal>
  <goal name="alphabeta&#39;vc.3" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.000000" steps="8388"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.000000"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.000000" steps="186772"/></proof>
  <transf name="split_vc" >
   <goal name="alphabeta&#39;vc.3.0" expl="postcondition">
   <proof prover="0"><result status="valid" time="0.015391" steps="21"/></proof>
   </goal>
   <goal name="alphabeta&#39;vc.3.1" expl="postcondition">
   </goal>
  </transf>
  </goal>
  <goal name="alphabeta&#39;vc.4" expl="precondition">
  <proof prover="0"><result status="valid" time="0.008455" steps="30"/></proof>
  </goal>
  <goal name="alphabeta&#39;vc.5" expl="variant decrease">
  <proof prover="0"><result status="valid" time="0.026300" steps="78"/></proof>
  </goal>
  <goal name="alphabeta&#39;vc.6" expl="variant decrease">
  <proof prover="0" obsolete="true"><result status="valid" time="0.016981" steps="156"/></proof>
  </goal>
  <goal name="alphabeta&#39;vc.7" expl="precondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.033663" steps="154"/></proof>
  </goal>
  <goal name="alphabeta&#39;vc.8" expl="postcondition">
  </goal>
  <goal name="alphabeta&#39;vc.9" expl="precondition">
  <proof prover="0"><result status="valid" time="0.019021" steps="30"/></proof>
  </goal>
  <goal name="alphabeta&#39;vc.10" expl="postcondition">
  <proof prover="0"><result status="timeout" time="1.000000" steps="11614"/></proof>
  <proof prover="1"><result status="timeout" time="1.000000"/></proof>
  <proof prover="2"><result status="timeout" time="1.000000" steps="561093"/></proof>
  <transf name="split_vc" >
   <goal name="alphabeta&#39;vc.10.0" expl="postcondition">
   <proof prover="0"><result status="valid" time="0.008536" steps="16"/></proof>
   </goal>
   <goal name="alphabeta&#39;vc.10.1" expl="postcondition">
   <proof prover="0"><result status="valid" time="0.017680" steps="25"/></proof>
   </goal>
   <goal name="alphabeta&#39;vc.10.2" expl="postcondition">
   <proof prover="0"><result status="valid" time="0.021043" steps="25"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
