<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.4.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Z3" version="4.8.12" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml">
<path name=".."/><path name="minmax.mlw"/>
<theory name="Top">
 <goal name="int63_min&#39;vc" expl="VC for int63_min" proved="true">
 <proof prover="0"><result status="valid" time="0.000001" steps="15"/></proof>
 </goal>
 <goal name="int63_max&#39;vc" expl="VC for int63_max" proved="true">
 <proof prover="0"><result status="valid" time="0.013805" steps="15"/></proof>
 </goal>
 <goal name="height&#39;vc" expl="VC for height" proved="true">
 <proof prover="0"><result status="valid" time="0.011485" steps="48"/></proof>
 </goal>
 <goal name="height_list&#39;vc" expl="VC for height_list" proved="true">
 <proof prover="0"><result status="valid" time="0.011453" steps="118"/></proof>
 </goal>
 <goal name="height_list_max&#39;vc" expl="VC for height_list_max" proved="true">
 <proof prover="0"><result status="valid" time="0.011442" steps="200"/></proof>
 </goal>
 <goal name="minmax&#39;&#39;vc" expl="VC for minmax&#39;" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="minmax&#39;&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.010621" steps="17"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="minmax&#39;_list&#39;vc" expl="VC for minmax&#39;_list" proved="true">
 <proof prover="0"><result status="valid" time="0.013801" steps="99"/></proof>
 </goal>
 <goal name="minmax&#39;_list_max_in&#39;vc" expl="VC for minmax&#39;_list_max_in" proved="true">
 <proof prover="0"><result status="valid" time="0.107580" steps="1195"/></proof>
 </goal>
 <goal name="minmax&#39;_list_min_in&#39;vc" expl="VC for minmax&#39;_list_min_in" proved="true">
 <proof prover="0"><result status="valid" time="0.117410" steps="1128"/></proof>
 </goal>
 <goal name="mimax&#39;_list_max&#39;vc" expl="VC for mimax&#39;_list_max" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="mimax&#39;_list_max&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.017268" steps="68"/></proof>
  </goal>
  <goal name="mimax&#39;_list_max&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.018816" steps="68"/></proof>
  </goal>
  <goal name="mimax&#39;_list_max&#39;vc.2" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="mimax&#39;_list_max&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.017805" steps="24"/></proof>
   </goal>
   <goal name="mimax&#39;_list_max&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.458984" steps="3109"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="mimax&#39;_list_min&#39;vc" expl="VC for mimax&#39;_list_min" proved="true">
 <proof prover="0"><result status="valid" time="0.706430" steps="5033"/></proof>
 </goal>
 <goal name="minmax&#39;_list_upper_extend_true" proved="true">
 <proof prover="0"><result status="valid" time="0.056100" steps="839"/></proof>
 </goal>
 <goal name="minmax&#39;_list_upper_extend_false" proved="true">
 <proof prover="0"><result status="valid" time="0.076448" steps="867"/></proof>
 </goal>
 <goal name="minmax&#39;_list_lower_extend_true" proved="true">
 <proof prover="0"><result status="valid" time="0.123123" steps="1146"/></proof>
 </goal>
 <goal name="minmax&#39;_list_lower_extend_false" proved="true">
 <proof prover="0"><result status="valid" time="0.144356" steps="1190"/></proof>
 </goal>
 <goal name="minmax&#39;_list_extendscore_true&#39;vc" expl="VC for minmax&#39;_list_extendscore_true" proved="true">
 <proof prover="0"><result status="valid" time="0.072333" steps="895"/></proof>
 </goal>
 <goal name="minmax&#39;_list_extendscore_false&#39;vc" expl="VC for minmax&#39;_list_extendscore_false" proved="true">
 <proof prover="0"><result status="valid" time="0.227335" steps="1494"/></proof>
 </goal>
 <goal name="minmax&#39;_list_infscore_true&#39;vc" expl="VC for minmax&#39;_list_infscore_true" proved="true">
 <proof prover="0"><result status="valid" time="0.596961" steps="6791"/></proof>
 </goal>
 <goal name="minmax&#39;_list_supscore_false&#39;vc" expl="VC for minmax&#39;_list_supscore_false" proved="true">
 <proof prover="0"><result status="valid" time="0.691234" steps="6816"/></proof>
 </goal>
 <goal name="minmax&#39;_list_rev_l&#39;vc" expl="VC for minmax&#39;_list_rev_l" proved="true">
 <proof prover="1"><result status="valid" time="0.132599" steps="405584"/></proof>
 </goal>
 <goal name="minmax&#39;_list_min_int_lower_bound&#39;vc" expl="VC for minmax&#39;_list_min_int_lower_bound" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="minmax&#39;_list_min_int_lower_bound&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.020690" steps="117"/></proof>
  </goal>
  <goal name="minmax&#39;_list_min_int_lower_bound&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.023901" steps="140"/></proof>
  </goal>
  <goal name="minmax&#39;_list_min_int_lower_bound&#39;vc.2" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="minmax&#39;_list_min_int_lower_bound&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.027753" steps="18"/></proof>
   </goal>
   <goal name="minmax&#39;_list_min_int_lower_bound&#39;vc.2.1" expl="postcondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="minmax&#39;_list_min_int_lower_bound&#39;vc.2.1.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.133336" steps="33339"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="minmax&#39;_list_min_int_lower_bound&#39;vc.2.2" expl="postcondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="minmax&#39;_list_min_int_lower_bound&#39;vc.2.2.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="minmax&#39;_list_min_int_lower_bound&#39;vc.2.2.0.0" expl="postcondition" proved="true">
     <proof prover="2"><result status="valid" time="0.218198" steps="48316"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="minmax&#39;_list_max_int_lower_bound&#39;vc" expl="VC for minmax&#39;_list_max_int_lower_bound" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="minmax&#39;_list_max_int_lower_bound&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.036512" steps="115"/></proof>
  </goal>
  <goal name="minmax&#39;_list_max_int_lower_bound&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.032538" steps="137"/></proof>
  </goal>
  <goal name="minmax&#39;_list_max_int_lower_bound&#39;vc.2" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="minmax&#39;_list_max_int_lower_bound&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.019789" steps="18"/></proof>
   </goal>
   <goal name="minmax&#39;_list_max_int_lower_bound&#39;vc.2.1" expl="postcondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="minmax&#39;_list_max_int_lower_bound&#39;vc.2.1.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.299906" steps="56627"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="minmax&#39;_list_max_int_lower_bound&#39;vc.2.2" expl="postcondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="minmax&#39;_list_max_int_lower_bound&#39;vc.2.2.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="minmax&#39;_list_max_int_lower_bound&#39;vc.2.2.0.0" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="minmax&#39;_list_max_int_lower_bound&#39;vc.2.2.0.0.0" expl="postcondition" proved="true">
      <proof prover="2" timelimit="5" memlimit="2000"><result status="valid" time="1.274386" steps="176453"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="minmax&#39;_spec&#39;vc" expl="VC for minmax&#39;_spec" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="minmax&#39;_spec&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.015580" steps="18"/></proof>
  </goal>
  <goal name="minmax&#39;_spec&#39;vc.1" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="minmax&#39;_spec&#39;vc.1.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.025749" steps="85"/></proof>
   </goal>
   <goal name="minmax&#39;_spec&#39;vc.1.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="minmax&#39;_spec&#39;vc.1.1.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.025218" steps="68"/></proof>
    </goal>
    <goal name="minmax&#39;_spec&#39;vc.1.1.1" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="minmax&#39;_spec&#39;vc.1.1.1.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.097105" steps="819"/></proof>
     </goal>
     <goal name="minmax&#39;_spec&#39;vc.1.1.1.1" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.084703" steps="826"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="minmax&#39;_list_spec&#39;vc" expl="VC for minmax&#39;_list_spec" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="minmax&#39;_list_spec&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.021788" steps="49"/></proof>
  </goal>
  <goal name="minmax&#39;_list_spec&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.019682" steps="172"/></proof>
  </goal>
  <goal name="minmax&#39;_list_spec&#39;vc.2" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.021423" steps="174"/></proof>
  </goal>
  <goal name="minmax&#39;_list_spec&#39;vc.3" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="minmax&#39;_list_spec&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="minmax&#39;_list_spec&#39;vc.3.0.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.022697" steps="48"/></proof>
    </goal>
    <goal name="minmax&#39;_list_spec&#39;vc.3.0.1" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.0" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.0.0" expl="postcondition" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.0.0.0" expl="postcondition" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.0.0.0.0" expl="postcondition" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.0.0.0.0.0" expl="postcondition" proved="true">
         <proof prover="2" timelimit="5" memlimit="2000"><result status="valid" time="0.179330" steps="37150"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.0.0.0.1" expl="postcondition" proved="true">
        <proof prover="2" timelimit="5"><result status="valid" time="2.459688" steps="288030"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.1" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.1.0" expl="postcondition" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.1.0.0" expl="postcondition" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.1.0.0.0" expl="postcondition" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.1.0.0.0.0" expl="postcondition" proved="true">
         <proof prover="2" timelimit="5" memlimit="2000"><result status="valid" time="0.158824" steps="33490"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="minmax&#39;_list_spec&#39;vc.3.0.1.1.0.0.1" expl="postcondition" proved="true">
        <proof prover="2" timelimit="5"><result status="valid" time="1.535807" steps="152593"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="minmax&#39;_list_spec&#39;vc.3.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="minmax&#39;_list_spec&#39;vc.3.1.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="minmax&#39;_list_spec&#39;vc.3.1.0.0" expl="postcondition" proved="true">
     <transf name="inline_goal" proved="true" >
      <goal name="minmax&#39;_list_spec&#39;vc.3.1.0.0.0" expl="postcondition" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="minmax&#39;_list_spec&#39;vc.3.1.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="2"><result status="valid" time="0.056267" steps="26519"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="minmax&#39;_list_spec&#39;vc.3.1.1" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="minmax&#39;_list_spec&#39;vc.3.1.1.0" expl="postcondition" proved="true">
     <transf name="inline_goal" proved="true" >
      <goal name="minmax&#39;_list_spec&#39;vc.3.1.1.0.0" expl="postcondition" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="minmax&#39;_list_spec&#39;vc.3.1.1.0.0.0" expl="postcondition" proved="true">
       <proof prover="2"><result status="valid" time="1.070333" steps="138440"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="minmax&#39;_list_spec&#39;vc.3.1.1.1" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="minmax&#39;_list_spec&#39;vc.3.1.1.1.0" expl="postcondition" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="minmax&#39;_list_spec&#39;vc.3.1.1.1.0.0" expl="postcondition" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="minmax&#39;_list_spec&#39;vc.3.1.1.1.0.0.0" expl="postcondition" proved="true">
        <proof prover="2"><result status="valid" time="0.793007" steps="115498"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="minmax&#39;vc" expl="VC for minmax">
 <transf name="split_vc" >
  <goal name="minmax&#39;vc.0" expl="variant decrease">
  <proof prover="0" obsolete="true"><result status="valid" time="0.010378" steps="78"/></proof>
  </goal>
  <goal name="minmax&#39;vc.1" expl="variant decrease">
  <proof prover="0" obsolete="true"><result status="valid" time="0.019130" steps="116"/></proof>
  </goal>
  <goal name="minmax&#39;vc.2" expl="precondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.014752" steps="112"/></proof>
  </goal>
  <goal name="minmax&#39;vc.3" expl="postcondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.128739" steps="37204"/></proof>
  </goal>
  <goal name="minmax&#39;vc.4" expl="precondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.018074" steps="30"/></proof>
  </goal>
  <goal name="minmax&#39;vc.5" expl="variant decrease">
  <proof prover="0" obsolete="true"><result status="valid" time="0.018174" steps="78"/></proof>
  </goal>
  <goal name="minmax&#39;vc.6" expl="variant decrease">
  <proof prover="0" obsolete="true"><result status="valid" time="0.021880" steps="116"/></proof>
  </goal>
  <goal name="minmax&#39;vc.7" expl="precondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.029793" steps="112"/></proof>
  </goal>
  <goal name="minmax&#39;vc.8" expl="postcondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.128901" steps="37134"/></proof>
  </goal>
  <goal name="minmax&#39;vc.9" expl="precondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.010221" steps="30"/></proof>
  </goal>
  <goal name="minmax&#39;vc.10" expl="postcondition">
  <transf name="split_vc" >
   <goal name="minmax&#39;vc.10.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="valid" time="0.008421" steps="15"/></proof>
   </goal>
   <goal name="minmax&#39;vc.10.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="valid" time="0.017716" steps="23"/></proof>
   </goal>
   <goal name="minmax&#39;vc.10.2" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="valid" time="0.016209" steps="23"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="alphabeta&#39;vc" expl="VC for alphabeta">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.225194" steps="18414"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.000000"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.000000" steps="188594"/></proof>
 <transf name="split_vc" >
  <goal name="alphabeta&#39;vc.0" expl="variant decrease">
  <proof prover="0" obsolete="true"><result status="valid" time="0.011360" steps="223"/></proof>
  </goal>
  <goal name="alphabeta&#39;vc.1" expl="variant decrease">
  <proof prover="0" obsolete="true"><result status="valid" time="0.016981" steps="384"/></proof>
  </goal>
  <goal name="alphabeta&#39;vc.2" expl="precondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.020846" steps="360"/></proof>
  </goal>
  <goal name="alphabeta&#39;vc.3" expl="precondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.028976" steps="99"/></proof>
  </goal>
  <goal name="alphabeta&#39;vc.4" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.000000" steps="8561"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.000000"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.000000" steps="131452"/></proof>
  <transf name="split_vc" >
   <goal name="alphabeta&#39;vc.4.0" expl="precondition">
   <proof prover="0" obsolete="true"><result status="valid" time="0.022159" steps="42"/></proof>
   </goal>
   <goal name="alphabeta&#39;vc.4.1" expl="precondition">
   <proof prover="0" obsolete="true"><result status="valid" time="0.016064" steps="23"/></proof>
   </goal>
   <goal name="alphabeta&#39;vc.4.2" expl="precondition">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.000000" steps="37184"/></proof>
   <proof prover="1" timelimit="5" obsolete="true"><result status="timeout" time="5.000000"/></proof>
   <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.000000" steps="566679"/></proof>
   <transf name="destruct" arg1="Ensures1">
    <goal name="alphabeta&#39;vc.4.2.0" expl="precondition">
    <proof prover="0" obsolete="true"><result status="valid" time="0.027326" steps="33"/></proof>
    </goal>
    <goal name="alphabeta&#39;vc.4.2.1" expl="precondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.000000" steps="7723"/></proof>
    <proof prover="1" obsolete="true"><result status="timeout" time="1.000000"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.000000" steps="151808"/></proof>
    <transf name="destruct" arg1="Requires2">
     <goal name="alphabeta&#39;vc.4.2.1.0" expl="precondition">
     <proof prover="0" obsolete="true"><result status="valid" time="0.021721" steps="39"/></proof>
     </goal>
     <goal name="alphabeta&#39;vc.4.2.1.1" expl="precondition">
     <proof prover="0" obsolete="true"><result status="valid" time="0.032259" steps="39"/></proof>
     </goal>
     <goal name="alphabeta&#39;vc.4.2.1.2" expl="precondition">
     <proof prover="0" obsolete="true"><result status="valid" time="0.340076" steps="3211"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="alphabeta&#39;vc.4.2.2" expl="precondition">
    <proof prover="0" obsolete="true"><result status="valid" time="0.699296" steps="6085"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="alphabeta&#39;vc.4.3" expl="precondition">
   <proof prover="0" obsolete="true"><result status="valid" time="1.339120" steps="8406"/></proof>
   </goal>
   <goal name="alphabeta&#39;vc.4.4" expl="precondition">
   <proof prover="0" obsolete="true"><result status="valid" time="0.022018" steps="23"/></proof>
   </goal>
   <goal name="alphabeta&#39;vc.4.5" expl="precondition">
   <proof prover="0" obsolete="true"><result status="valid" time="0.014542" steps="45"/></proof>
   </goal>
   <goal name="alphabeta&#39;vc.4.6" expl="precondition">
   <proof prover="0" obsolete="true"><result status="valid" time="0.012867" steps="43"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="alphabeta&#39;vc.5" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.000000" steps="7057"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.000000"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.000000" steps="144234"/></proof>
  <transf name="split_vc" >
   <goal name="alphabeta&#39;vc.5.0" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="valid" time="0.197996" steps="46310"/></proof>
   </goal>
   <goal name="alphabeta&#39;vc.5.1" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="valid" time="0.182096" steps="46317"/></proof>
   </goal>
   <goal name="alphabeta&#39;vc.5.2" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="valid" time="0.364612" steps="56379"/></proof>
   </goal>
   <goal name="alphabeta&#39;vc.5.3" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="valid" time="0.296380" steps="57499"/></proof>
   </goal>
   <goal name="alphabeta&#39;vc.5.4" expl="postcondition">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.000000" steps="29830"/></proof>
   <proof prover="1" timelimit="5" obsolete="true"><result status="timeout" time="5.000000"/></proof>
   <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.000000" steps="624943"/></proof>
   <transf name="split_vc" >
    <goal name="alphabeta&#39;vc.5.4.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="valid" time="0.015964" steps="33"/></proof>
    </goal>
    <goal name="alphabeta&#39;vc.5.4.1" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.000000" steps="15539"/></proof>
    <proof prover="1" obsolete="true"><result status="timeout" time="1.000000"/></proof>
    <proof prover="2" obsolete="true"><result status="timeout" time="1.000000" steps="164565"/></proof>
    <transf name="destruct" arg1="Requires">
     <goal name="alphabeta&#39;vc.5.4.1.0" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="valid" time="0.021602" steps="46"/></proof>
     </goal>
     <goal name="alphabeta&#39;vc.5.4.1.1" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.000000" steps="12336"/></proof>
     <proof prover="1" obsolete="true"><result status="timeout" time="1.000000"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.000000" steps="207563"/></proof>
     <transf name="destruct" arg1="H1">
      <goal name="alphabeta&#39;vc.5.4.1.1.0" expl="postcondition">
      <proof prover="0" obsolete="true"><result status="timeout" time="1.000000" steps="9821"/></proof>
      <proof prover="1" obsolete="true"><result status="timeout" time="1.000000"/></proof>
      <proof prover="2" obsolete="true"><result status="timeout" time="1.000000" steps="178763"/></proof>
      </goal>
      <goal name="alphabeta&#39;vc.5.4.1.1.1" expl="postcondition">
      <proof prover="0" obsolete="true"><result status="valid" time="0.006608" steps="24"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="alphabeta&#39;vc.5.4.1.2" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.000000" steps="11494"/></proof>
     <proof prover="1" obsolete="true"><result status="timeout" time="1.000000"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.000000" steps="231184"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="alphabeta&#39;vc.5.5" expl="postcondition">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.000000" steps="55336"/></proof>
   <proof prover="1" timelimit="5" obsolete="true"><result status="timeout" time="5.000000"/></proof>
   <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.000000" steps="1460395"/></proof>
   </goal>
   <goal name="alphabeta&#39;vc.5.6" expl="postcondition">
   <proof prover="2" obsolete="true"><result status="valid" time="0.189171" steps="46366"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="alphabeta&#39;vc.6" expl="precondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.008455" steps="30"/></proof>
  </goal>
  <goal name="alphabeta&#39;vc.7" expl="precondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.018284" steps="67"/></proof>
  </goal>
  <goal name="alphabeta&#39;vc.8" expl="precondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.017017" steps="59"/></proof>
  </goal>
  <goal name="alphabeta&#39;vc.9" expl="variant decrease">
  <proof prover="0" obsolete="true"><result status="valid" time="0.026300" steps="224"/></proof>
  </goal>
  <goal name="alphabeta&#39;vc.10" expl="variant decrease">
  <proof prover="0" obsolete="true"><result status="valid" time="0.030102" steps="383"/></proof>
  </goal>
  <goal name="alphabeta&#39;vc.11" expl="precondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.033663" steps="358"/></proof>
  </goal>
  <goal name="alphabeta&#39;vc.12" expl="precondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.019356" steps="98"/></proof>
  </goal>
  <goal name="alphabeta&#39;vc.13" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.000000" steps="12941"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.000000"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.000000" steps="183900"/></proof>
  <transf name="split_vc" >
   <goal name="alphabeta&#39;vc.13.0" expl="precondition">
   <proof prover="1" timelimit="5" obsolete="true"><result status="valid" time="0.033688" steps="120838"/></proof>
   </goal>
   <goal name="alphabeta&#39;vc.13.1" expl="precondition">
   <proof prover="0" timelimit="5" obsolete="true"><result status="valid" time="0.020725" steps="36"/></proof>
   </goal>
   <goal name="alphabeta&#39;vc.13.2" expl="precondition">
   <proof prover="2" timelimit="5" obsolete="true"><result status="valid" time="0.604759" steps="97407"/></proof>
   </goal>
   <goal name="alphabeta&#39;vc.13.3" expl="precondition">
   <proof prover="2" timelimit="5" obsolete="true"><result status="valid" time="0.078365" steps="28722"/></proof>
   </goal>
   <goal name="alphabeta&#39;vc.13.4" expl="precondition">
   <proof prover="0" timelimit="5" obsolete="true"><result status="valid" time="0.009504" steps="43"/></proof>
   </goal>
   <goal name="alphabeta&#39;vc.13.5" expl="precondition">
   <proof prover="2" timelimit="5" obsolete="true"><result status="valid" time="0.194308" steps="55930"/></proof>
   </goal>
   <goal name="alphabeta&#39;vc.13.6" expl="precondition">
   <proof prover="1" timelimit="5" obsolete="true"><result status="valid" time="0.008452" steps="8170"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="alphabeta&#39;vc.14" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.000000" steps="11614"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.000000"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.000000" steps="561093"/></proof>
  <transf name="split_vc" >
   <goal name="alphabeta&#39;vc.14.0" expl="postcondition">
   <proof prover="2" timelimit="5" obsolete="true"><result status="valid" time="0.115161" steps="42839"/></proof>
   </goal>
   <goal name="alphabeta&#39;vc.14.1" expl="postcondition">
   <proof prover="2" timelimit="5" obsolete="true"><result status="valid" time="0.165315" steps="45616"/></proof>
   </goal>
   <goal name="alphabeta&#39;vc.14.2" expl="postcondition">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.000000" steps="46735"/></proof>
   <proof prover="1" timelimit="5" obsolete="true"><result status="timeout" time="5.000000"/></proof>
   <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.000000" steps="1537739"/></proof>
   </goal>
   <goal name="alphabeta&#39;vc.14.3" expl="postcondition">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.000000" steps="45690"/></proof>
   <proof prover="1" timelimit="5" obsolete="true"><result status="timeout" time="5.000000"/></proof>
   <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.000000" steps="558587"/></proof>
   </goal>
   <goal name="alphabeta&#39;vc.14.4" expl="postcondition">
   <proof prover="2" timelimit="5" obsolete="true"><result status="valid" time="0.177666" steps="42800"/></proof>
   </goal>
   <goal name="alphabeta&#39;vc.14.5" expl="postcondition">
   <proof prover="2" timelimit="5" obsolete="true"><result status="valid" time="0.218974" steps="54167"/></proof>
   </goal>
   <goal name="alphabeta&#39;vc.14.6" expl="postcondition">
   <proof prover="0" timelimit="5" obsolete="true"><result status="timeout" time="5.000000" steps="32577"/></proof>
   <proof prover="1" timelimit="5" obsolete="true"><result status="timeout" time="5.000000"/></proof>
   <proof prover="2" timelimit="5" obsolete="true"><result status="timeout" time="5.000000" steps="1078321"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="alphabeta&#39;vc.15" expl="precondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.019021" steps="30"/></proof>
  </goal>
  <goal name="alphabeta&#39;vc.16" expl="precondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.017365" steps="67"/></proof>
  </goal>
  <goal name="alphabeta&#39;vc.17" expl="precondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.021131" steps="58"/></proof>
  </goal>
  <goal name="alphabeta&#39;vc.18" expl="postcondition">
  <transf name="split_vc" >
   <goal name="alphabeta&#39;vc.18.0" expl="postcondition">
   <transf name="split_vc" >
    <goal name="alphabeta&#39;vc.18.0.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="valid" time="0.013830" steps="16"/></proof>
    </goal>
    <goal name="alphabeta&#39;vc.18.0.1" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="valid" time="0.006877" steps="16"/></proof>
    </goal>
    <goal name="alphabeta&#39;vc.18.0.2" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="valid" time="0.011648" steps="16"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="alphabeta&#39;vc.18.1" expl="postcondition">
   <transf name="split_vc" >
    <goal name="alphabeta&#39;vc.18.1.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="valid" time="0.012736" steps="14"/></proof>
    </goal>
    <goal name="alphabeta&#39;vc.18.1.1" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="valid" time="0.000001" steps="16"/></proof>
    </goal>
    <goal name="alphabeta&#39;vc.18.1.2" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="valid" time="0.012135" steps="16"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="alphabeta&#39;vc.18.2" expl="postcondition">
   <transf name="split_vc" >
    <goal name="alphabeta&#39;vc.18.2.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="valid" time="0.022095" steps="30"/></proof>
    </goal>
    <goal name="alphabeta&#39;vc.18.2.1" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="valid" time="0.022476" steps="51"/></proof>
    </goal>
    <goal name="alphabeta&#39;vc.18.2.2" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="valid" time="0.023894" steps="51"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="alphabeta&#39;vc.18.3" expl="postcondition">
   </goal>
   <goal name="alphabeta&#39;vc.18.4" expl="postcondition">
   <transf name="split_vc" >
    <goal name="alphabeta&#39;vc.18.4.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="valid" time="0.006078" steps="16"/></proof>
    </goal>
    <goal name="alphabeta&#39;vc.18.4.1" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="valid" time="0.000001" steps="14"/></proof>
    </goal>
    <goal name="alphabeta&#39;vc.18.4.2" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="valid" time="0.011519" steps="14"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="alphabeta&#39;vc.18.5" expl="postcondition">
   </goal>
   <goal name="alphabeta&#39;vc.18.6" expl="postcondition">
   <transf name="split_vc" >
    <goal name="alphabeta&#39;vc.18.6.0" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="valid" time="0.014401" steps="14"/></proof>
    </goal>
    <goal name="alphabeta&#39;vc.18.6.1" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="valid" time="0.015405" steps="14"/></proof>
    </goal>
    <goal name="alphabeta&#39;vc.18.6.2" expl="postcondition">
    <proof prover="0" obsolete="true"><result status="valid" time="0.013071" steps="14"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
